# Generated by Django 4.0.6 on 2022-08-08 17:14

import authentication.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='PhoneOTP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=12, unique=True, validators=[django.core.validators.RegexValidator(message='Phone number must be entered in the format: ...', regex='^(\\+7|7|8)?[\\s\\-]?\\(?[489][0-9]{2}\\)?[\\s\\-]?[0-9]{3}[\\s\\-]?[0-9]{2}[\\s\\-]?[0-9]{2}')])),
                ('otp', models.CharField(blank=True, max_length=9, null=True)),
                ('count', models.IntegerField(default=0)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('used', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('password', models.CharField(max_length=100, null=True)),
                ('active', models.BooleanField(default=True)),
                ('admin', models.BooleanField(default=False)),
                ('superuser', models.BooleanField(default=False)),
                ('b24_id', models.CharField(max_length=100, null=True)),
                ('photo', models.ImageField(null=True, upload_to=authentication.models.UserPathAndHash('passport_or_birth_certificate'))),
                ('gender', models.CharField(max_length=100, null=True)),
                ('first_name', models.CharField(max_length=100, null=True)),
                ('last_name', models.CharField(max_length=100, null=True)),
                ('middle_name', models.CharField(max_length=100, null=True)),
                ('birth_date', models.DateTimeField(null=True)),
                ('contact_type', models.CharField(max_length=100, null=True)),
                ('phone_number', models.CharField(max_length=100, unique=True)),
                ('sport_school', models.CharField(max_length=200, null=True)),
                ('department', models.CharField(max_length=100, null=True)),
                ('trainer_name', models.CharField(max_length=100, null=True)),
                ('training_place', models.CharField(max_length=200, null=True)),
                ('tech_qualification', models.CharField(max_length=100, null=True)),
                ('sport_qualification', models.CharField(max_length=100, null=True)),
                ('weight', models.IntegerField(null=True)),
                ('height', models.IntegerField(null=True)),
                ('region', models.CharField(max_length=200, null=True)),
                ('city', models.CharField(max_length=200, null=True)),
                ('address', models.CharField(max_length=200, null=True)),
                ('school', models.CharField(max_length=200, null=True)),
                ('med_certificate_date', models.DateTimeField(null=True)),
                ('insurance_policy_date', models.DateTimeField(null=True)),
                ('father_full_name', models.CharField(max_length=100, null=True)),
                ('father_birth_date', models.DateTimeField(null=True)),
                ('father_phone_number', models.CharField(max_length=100, null=True)),
                ('father_email', models.EmailField(max_length=254, null=True)),
                ('mother_full_name', models.CharField(max_length=100, null=True)),
                ('mother_birth_date', models.DateTimeField(null=True)),
                ('mother_phone_number', models.CharField(max_length=100, null=True)),
                ('mother_email', models.EmailField(max_length=254, null=True)),
                ('passport_or_birth_certificate', models.ImageField(null=True, upload_to=authentication.models.DocumentsPathAndHash('passport_or_birth_certificate'))),
                ('oms_policy', models.ImageField(null=True, upload_to=authentication.models.DocumentsPathAndHash('oms_policy'))),
                ('school_ref', models.ImageField(null=True, upload_to=authentication.models.DocumentsPathAndHash('school_ref'))),
                ('insurance_policy', models.ImageField(null=True, upload_to=authentication.models.DocumentsPathAndHash('insurance_policy'))),
                ('tech_qual_diplo', models.ImageField(null=True, upload_to=authentication.models.DocumentsPathAndHash('tech_qual_diplo'))),
                ('med_certificate', models.ImageField(null=True, upload_to=authentication.models.DocumentsPathAndHash('med_certificate'))),
                ('foreign_passport', models.ImageField(null=True, upload_to=authentication.models.DocumentsPathAndHash('foreign_passport'))),
                ('inn', models.ImageField(null=True, upload_to=authentication.models.DocumentsPathAndHash('inn'))),
                ('diploma', models.ImageField(null=True, upload_to=authentication.models.DocumentsPathAndHash('diploma'))),
                ('snils', models.ImageField(null=True, upload_to=authentication.models.DocumentsPathAndHash('snils'))),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('parents', models.ManyToManyField(null=True, related_name='children', to=settings.AUTH_USER_MODEL)),
                ('trainer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='students', to=settings.AUTH_USER_MODEL)),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
